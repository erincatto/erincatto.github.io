<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>math on Box2D</title>
    <link>https://erincatto.github.io/tags/math/</link>
    <description>Recent content in math on Box2D</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 05 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://erincatto.github.io/tags/math/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Transform a Plane</title>
      <link>https://erincatto.github.io/posts/2018/09/how-to-transform-a-plane/</link>
      <pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://erincatto.github.io/posts/2018/09/how-to-transform-a-plane/</guid>
      <description>Suppose you have a plane equation in local space and you&#39;d like to express that plane equation in world space. The plane in local space is written as:
\[P := (n, w)\]
where \(n\) is the plane normal and \(w\) is the plane offset.
A point \(x\) is on the plane if
\[n \cdot x = w\]
Now define a transform \(A\) as
\[ A := (R, p) \]
where \(R\) is an orthonormal rotation matrix and \(p\) is a translation vector.</description>
    </item>
    
    <item>
      <title>Computing a Basis</title>
      <link>https://erincatto.github.io/posts/2014/02/computing-a-basis/</link>
      <pubDate>Mon, 03 Feb 2014 11:33:04 +0000</pubDate>
      
      <guid>https://erincatto.github.io/posts/2014/02/computing-a-basis/</guid>
      <description>Given a normalized 3D vector, hereâ€™s an efficient method for computing a full basis. The computed basis is axis aligned if the input vector is axis aligned.
void ComputeBasis(const Vec&amp;amp; a, Vec* b, Vec* c) { // Suppose vector a has all equal components and is a unit vector:  // a = (s, s, s)  // Then 3*s*s = 1, s = sqrt(1/3) = 0.57735. This means that at  // least one component of a unit vector must be greater or equal  // to 0.</description>
    </item>
    
  </channel>
</rss>